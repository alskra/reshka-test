@mixin focus-not-focus-visible {
	#{if(&, "&", "")}:focus:not(:focus-visible, .focus-visible) {
		@content;
	}
}

@mixin focus-visible-default {
	outline: 1px dotted;
	// stylelint-disable-next-line
	outline: -webkit-focus-ring-color auto 1px;
}

@mixin focus-visible {
	#{if(&, "&", "")}:is(:focus-visible, .focus-visible) {
		@content;
	}
}

@mixin hover {
	@media (hover: hover), screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
		// Insert Styles for Hover-Devices and IE11 here.
		#{if(&, "&", "")}:hover {
			@content;
		}
	}
}

@mixin disabled {
	#{if(&, "&", "")}:is(:disabled, .is-disabled) {
		@content;
	}
}

@mixin hover-not-disabled {
	@include hover {
		&:not(:disabled, .is-disabled) {
			@content;
		}
	}
}

@mixin invalid {
	#{if(&, "&", "")}:is(.is-invalid) {
		@content;
	}
}

@mixin text-stroke($stroke-width, $stroke-color, $fill-color: transparent) {
	-webkit-text-stroke: $stroke-width $stroke-color;

	@if ($fill-color == transparent) {
		-webkit-text-fill-color: $fill-color;
		color: $stroke-color;
	} @else {
		color: $fill-color;
	}
}

@mixin font-face($url, $font-family, $font-weight, $font-style, $woff2: true) {
	@font-face {
		@if $woff2 {
			src:
				url($url + ".woff2") format("woff2"),
				url($url + ".woff") format("woff");
		} @else {
			src: url($url + ".woff") format("woff");
		}

		// stylelint-disable
		font-family: $font-family;
		font-weight: $font-weight;
		font-style: $font-style;
		font-display: swap;
		// stylelint-enable
	}
}

@mixin retina {
	// stylelint-disable-next-line media-feature-name-no-vendor-prefix
	@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
		@content;
	}
}

@mixin line-clamp {
	// stylelint-disable
	display: -webkit-box;
	-webkit-box-orient: vertical;
	-webkit-line-clamp: var(--line-clamp);
	overflow: hidden;
	line-height: var(--line-height);
	max-height: calc(var(--line-clamp) * var(--line-height) * 1em);
	// stylelint-enable
}
